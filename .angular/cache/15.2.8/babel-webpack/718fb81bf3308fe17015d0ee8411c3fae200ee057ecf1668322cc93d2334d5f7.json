{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.cartitemlist = [];\n    this.productlist = new BehaviorSubject([]);\n    this.amount = 0;\n  }\n  getproduct() {\n    return this.http.get(\"https://dummyjson.com/products\");\n  }\n  getproductbyid(id) {\n    return this.http.get(\"https://dummyjson.com/products/\" + id);\n  }\n  addtocart(data) {\n    this.cartitemlist.push(data);\n    this.productlist.next(this.cartitemlist);\n    console.log(this.cartitemlist);\n  }\n  products() {\n    return this.productlist.asObservable();\n  }\n  removecartitem(data) {\n    this.cartitemlist.map((a, index) => {\n      if (data.id === a.id) {\n        this.cartitemlist.splice(index, 1);\n      }\n    });\n    this.productlist.next(this.cartitemlist);\n  }\n  // total calculation\n  calculateprice() {\n    let total = 0;\n    this.cartitemlist.map(a => {\n      total += a.price;\n    });\n    return total;\n  }\n  // remove all item\n  removeallitems() {\n    this.cartitemlist = [];\n    this.productlist.next(this.cartitemlist);\n  }\n  // Passing data from one component amother\n  sendfinalamount(data) {\n    this.amount = data;\n  }\n  recievefinalamount() {\n    return this.amount;\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAQA,eAAe,QAAO,MAAM;;;AAKpC,OAAM,MAAOC,UAAU;EAIrBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAHjB,iBAAY,GAAM,EAAE;IACpB,gBAAW,GAAG,IAAIH,eAAe,CAAM,EAAE,CAAC;IAC1C,WAAM,GAAS,CAAC;EACgB;EAEvCI,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,gCAAgC,CAAC;EACnE;EAEAC,cAAc,CAACC,EAAS;IACvB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,iCAAiC,GAACE,EAAE,CAAC;EAC3D;EAEAC,SAAS,CAACC,IAAY;IACtB,IAAI,CAACC,YAAY,CAACC,IAAI,CAACF,IAAI,CAAC;IAC5B,IAAI,CAACG,WAAW,CAACC,IAAI,CAAC,IAAI,CAACH,YAAY,CAAC;IACxCI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,YAAY,CAAC;EAC9B;EAEAM,QAAQ;IACN,OAAO,IAAI,CAACJ,WAAW,CAACK,YAAY,EAAE;EACxC;EAEAC,cAAc,CAACT,IAAY;IAC1B,IAAI,CAACC,YAAY,CAACS,GAAG,CAAC,CAACC,CAAS,EAACC,KAAa,KAAG;MAChD,IAAGZ,IAAI,CAACF,EAAE,KAAKa,CAAC,CAACb,EAAE,EAAC;QAClB,IAAI,CAACG,YAAY,CAACY,MAAM,CAACD,KAAK,EAAC,CAAC,CAAC;;IAEpC,CAAC,CAAC;IACF,IAAI,CAACT,WAAW,CAACC,IAAI,CAAC,IAAI,CAACH,YAAY,CAAC;EACzC;EAEA;EACAa,cAAc;IACZ,IAAIC,KAAK,GAAE,CAAC;IACZ,IAAI,CAACd,YAAY,CAACS,GAAG,CAAEC,CAAK,IAAG;MAC7BI,KAAK,IAAGJ,CAAC,CAACK,KAAK;IACjB,CAAC,CAAC;IACF,OAAOD,KAAK;EACd;EAEA;EACAE,cAAc;IACZ,IAAI,CAAChB,YAAY,GAAG,EAAE;IACtB,IAAI,CAACE,WAAW,CAACC,IAAI,CAAC,IAAI,CAACH,YAAY,CAAC;EAC1C;EAEF;EACEiB,eAAe,CAAClB,IAAW;IACzB,IAAI,CAACmB,MAAM,GAAGnB,IAAI;EACpB;EACDoB,kBAAkB;IACjB,OAAO,IAAI,CAACD,MAAM;EACnB;;AAtDY3B,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAA6B,SAAV7B,UAAU;EAAA8B,YAFT;AAAM","names":["BehaviorSubject","ApiService","constructor","http","getproduct","get","getproductbyid","id","addtocart","data","cartitemlist","push","productlist","next","console","log","products","asObservable","removecartitem","map","a","index","splice","calculateprice","total","price","removeallitems","sendfinalamount","amount","recievefinalamount","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\kaif ansari\\Downloads\\DummyAPI-Ecommerce-main (1)\\DummyAPI-Ecommerce-main\\src\\app\\shared\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport { product } from '../component/product-view/productmodal';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  public cartitemlist :any=[];\n  public productlist = new BehaviorSubject<any>([])\n  public amount :number=0;\n  constructor(private http:HttpClient) { }\n\n  getproduct(){\n    return this.http.get<product[]>(\"https://dummyjson.com/products\")\n  }\n\n  getproductbyid(id:string){\n   return this.http.get(\"https://dummyjson.com/products/\"+id)\n  }\n\n  addtocart(data:product){\n  this.cartitemlist.push(data);\n  this.productlist.next(this.cartitemlist);\n  console.log(this.cartitemlist)\n  }\n\n  products(){\n    return this.productlist.asObservable();\n  }\n\n  removecartitem(data:product){\n   this.cartitemlist.map((a:product,index:product)=>{\n    if(data.id === a.id){\n      this.cartitemlist.splice(index,1)\n    }\n   })\n   this.productlist.next(this.cartitemlist)\n  }\n\n  // total calculation\n  calculateprice(){\n    let total =0;\n    this.cartitemlist.map((a:any)=>{\n      total +=a.price;\n    })\n    return total;\n  }\n\n  // remove all item\n  removeallitems(){\n    this.cartitemlist = [];\n    this.productlist.next(this.cartitemlist)\n  }\n\n// Passing data from one component amother\n  sendfinalamount(data:number){\n    this.amount = data\n  }\n recievefinalamount(){\n  return this.amount;\n }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}